{"version":3,"file":"static/js/497.f2fb3edb.chunk.js","mappings":"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","sources":["components/FilmList/FilmList.jsx","components/Section/Section.Styled.jsx","pages/HomePage.jsx","pages/MoviesPage.jsx","components/FilmDetails/FilmDetails.Styled.jsx","components/FilmDetails/FilmDetails.jsx","services/replaceGenres.js","services/replaceVote.js","services/replaceDate.js","components/Section/AddInf.Styled.jsx","components/Section/Sect.styled.jsx","pages/MovieDetailsPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport const FilmList = ({ films }) => {\n  const location = useLocation();\n\n  return (\n    <ul>{films.map(film => {\n      return (\n        <li key={film.id}>\n          <Link to={`/movies/${film.id}`} state={{ from: location }}>{film.title}</Link>\n        </li>\n      );\n    })}</ul>\n  );\n};\n\nFilmList.propTypes = {\n  films: PropTypes.array\n};","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n\n  p {\n    margin-bottom: 20px;\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 800;\n    font-size: 40px;\n    line-height: 62px;\n  }\n\n  input {\n    border-radius: 1px;\n    border: 1px solid #ffffff;\n    color: #ffffff;\n    background: #131316;\n    margin-bottom: 20px;\n  }\n\n  button {\n    background: rgba(255, 255, 255, 0.9);\n    color: #131316;\n    border: 2px solid #FFFFFF;\n    box-sizing: border-box;\n    border-radius: 1px;\n    margin-left: 20px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport { FilmList } from \"../components/FilmList/FilmList\";\nimport { fetchPopularFilms } from \"../services/filmAPI\";\nimport { Section } from \"../components/Section/Section.Styled\";\n\nexport const HomePage = () => {\n\tconst [films, setFilms] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(true);\n\n\tuseEffect(() => {\n\t\tasync function fetchFilms () {\n\t\t\ttry {\n\t\t\t\tconst films = await fetchPopularFilms();\n\t\t\t\tsetFilms(films);\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\ttoast.error(error);\n\t\t\t}\n\t\t}\n\t\tfetchFilms();\n\t}, []);\n\n    return (\n\t\t\t\t<Section>\n\t\t\t\t\t<p>Trending today</p>\n\t\t\t\t\t{isLoading && <ScaleLoader color={\"#FFFFFF\"} height={50} />}\n\t\t\t\t\t{films && <FilmList films={films} />}\n\t\t\t\t</Section>\n    );\n};","import { useSearchParams } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport { fetchFilmByName } from \"../services/filmAPI\";\nimport { FilmList } from \"../components/FilmList/FilmList\";\nimport { Section } from \"../components/Section/Section.Styled\";\n\nexport const MoviesPage = () => {\n  const [films, setFilms] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get(\"query\");\n\n  useEffect(() => {\n\t\tasync function fetchFilms () {\n\t\t\ttry {\n        setIsLoading(true);\n\t\t\t\tconst films = await fetchFilmByName(query);\n        films.length === 0 ? toast.error('No matched films!') : setFilms(films);\n\t\t\t\tsetIsLoading(false);\n\t\t\t} catch (error) {\n\t\t\t\ttoast.error(error);\n\t\t\t}\n\t\t}\n\n    if (query) {\n      fetchFilms();\n    }\n\t\t\n\t}, [query]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (e.currentTarget.elements.query.value.trim() === \"\") {\n      toast.error('No matched films!');\n    } else {\n      setSearchParams({ query: e.currentTarget.elements.query.value });\n    }\n    e.currentTarget.reset();\n  };\n\n    return (\n        <Section>  \n            <form onSubmit={handleSubmit}>\n              <input type=\"text\" name=\"query\" autoComplete=\"off\"></input>\n              <button type=\"submit\">Search</button>\n            </form>\n            {isLoading && <ScaleLoader color={\"#ffffff\"} height={50} />}\n            {films && <FilmList films={films} />}\n        </Section>\n    );\n};","import styled from 'styled-components';\n\nexport const Div = styled.div`\n  width: 1200px;\n  padding: 20px;\n  border-bottom: 2px solid #FFFFFF;\n\n  div {\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 800;\n    font-size: 30px;\n    line-height: 50px;\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n  p {\n    margin-top: 10px;\n    margin-bottom: 10px;\n  }\n\n  span {\n    font-family: Open Sans;\n    font-style: normal;\n    font-weight: normal;\n    font-size: 14px;\n    line-height: 32px;\n  }\n\n  .year {\n    font-size: 30px;\n    line-height: 50px;\n  }\n\n\n`;","import { IconContext } from \"react-icons\";  \nimport { GiFilmStrip } from \"react-icons/gi\";\nimport { replaceGenres, replaceVote, replaceDate} from \"../../services\";\nimport { Div } from \"./FilmDetails.Styled\";\nimport PropTypes from 'prop-types';\n\nexport const FilmDetails = ({movie}) => {\n  return (\n    <Div>\n      {movie.poster_path ? <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.title || movie.original_title}></img> :\n      <IconContext.Provider value={{ color: \"#FFFFFF\", size: \"10em\"}}>\n        <div>\n          <GiFilmStrip/>\n        </div>\n      </IconContext.Provider>}\n      <div>{movie.title || movie.original_title} (<span className=\"year\">{replaceDate(movie.release_date)}</span>)</div>\n      <span>User Score: {replaceVote(movie.vote_average)}%</span>\n      <p>Overview:</p>\n      <span>{movie.overview}</span>\n      <p>Genres:</p>\n      <span>{replaceGenres(movie.genres)}</span>\n    </Div>\n  );\n};\n\nFilmDetails.propTypes = {\n  movie: PropTypes.object\n};","\nexport const replaceGenres = (genres) => {\n  return genres.map(genre => genre.name).join(\" \");\n};","\nexport const replaceVote = (voteAverage) => {\n  return voteAverage.toString().replace(\".\", \"\");\n};","\nexport const replaceDate = (date) => {\n  return date.slice(0, 4);\n};","import styled from 'styled-components';\n\nexport const Section = styled.section`\n  width: 1200px;\n  margin: 0 auto;\n\n  p {\n    margin-bottom: 20px;\n    font-family: Inter;\n    font-style: normal;\n    font-weight: 800;\n    font-size: 20px;\n    line-height: 62px;\n  }\n\n  a {\n    margin-right: 20px;\n    background: #4AE290;\n    border-radius: 1px;\n    color: #ffffff;\n    padding: 5px;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Div = styled.section`\n  padding-top: 20px;\n  \n   a {\n    background: #4AE290;\n    border-radius: 1px;\n    color: #ffffff;\n    padding: 5px;\n    margin: 20px;\n  }\n`;","import { useEffect, useState } from 'react';\nimport { Outlet, useParams, Link, useLocation } from \"react-router-dom\";\nimport { toast } from 'react-hot-toast';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport { FilmDetails } from \"../components/FilmDetails/FilmDetails\";\nimport { fetchFilmDetails } from \"../services/filmAPI\";\nimport { Section } from \"../components/Section/AddInf.Styled\";\nimport { Div } from \"../components/Section/Sect.styled\";\n\nexport const MovieDetailsPage = () => {\n    const [movie, setMovie] = useState(null);\n    const [isLoading, setIsLoading] = useState(true);\n    const { movieId } = useParams();\n    const location = useLocation();\n\n    useEffect(() => {\n      async function fetchFilm () {\n        try {\n          const movie = await fetchFilmDetails(movieId);\n          setMovie(movie);\n          setIsLoading(false);\n        } catch (error) {\n          toast.error(error);\n        }\n      }\n      fetchFilm();\n    }, [movieId])\n\n    return (\n        <>\n          <Div>\n            <Link to={location?.state?.from ?? \"/\"}>Go Back</Link>\n            {isLoading && <ScaleLoader color={\"#ffffff\"} height={100} />}\n            {movie && <FilmDetails movie={movie}/>}\n          </Div>\n          <Section>\n            <p>Additional information</p>\n            <Link to=\"cast\" state={{ from: location?.state?.from }}>Cast</Link>\n            <Link to=\"reviews\" state={{ from: location?.state?.from }}>Reviews</Link>\n          </Section>\n          <section>\n            <Outlet />\n          </section>\n        </>\n    );\n};"],"names":["FilmList","films","location","useLocation","map","film","to","id","state","from","title","Section","styled","HomePage","useState","setFilms","isLoading","setIsLoading","useEffect","fetchPopularFilms","toast","fetchFilms","color","height","MoviesPage","useSearchParams","searchParams","setSearchParams","query","get","fetchFilmByName","length","onSubmit","e","preventDefault","currentTarget","elements","value","trim","reset","type","name","autoComplete","Div","FilmDetails","genres","voteAverage","date","movie","poster_path","src","alt","original_title","size","className","release_date","slice","vote_average","toString","replace","overview","genre","join","MovieDetailsPage","setMovie","movieId","useParams","fetchFilmDetails","fetchFilm"],"sourceRoot":""}